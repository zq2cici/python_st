
参考链接：https://docs.scrapy.org/en/latest/topics/media-pipeline.html

当使用 ImagesPipeline ，典型的工作流程如下所示:

1.在一个爬虫里，你抓取一个项目，把其中图片的URL放入 image_urls   组内。
2.项目从爬虫内返回，进入项目管道。
3.当项目进入 ImagesPipeline，image_urls 组内的URLs将被Scrapy的  调度器和下载器（这意味着调度器和下载器的中间件可以复用）安排  下载，当优先级更高，会在其他页面被抓取前处理。项目会在这个特  定的管道阶段保持“locker”的状态，直到完成图片的下载（或者由  于某些原因未完成下载）。
4.当图片下载完，另一个组(images)将被更新到结构中。这个组将包含  一个字典列表，其中包括下载图片的信息，比如下载路径、源抓取地  址（从 image_urls 组获得）和图片的校验码。 images 列表中的图  片顺序将和源 image_urls 组保持一致。如果某个图片下载失败，将  会记录下错误信息，图片也不会出现在 images 组中。

本工程：1.定义一个图片项目  在：items.py

	2. 配置图片管道在文件： settings.py

	3. 实现一个爬虫 在 loadjpg.py

	4. 实现一个自定义图片管道  pipelines.py

需要改进：1.本工程只抓取了一个网站，改善爬虫多抓取多个网站

	  2.有些图片抓回来是base64码，未能实现保存